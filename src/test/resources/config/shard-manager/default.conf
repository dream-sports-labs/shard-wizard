sourceType = "S3"
shardsRefreshSeconds = 10
metricsAgent = "datadog"  # or "newrelic" or "noop"
serviceName = "example-service"
metricsAgentConfig = {
    datadog {
        host = "localhost"
        port = 8125
        prefix = ""
    }
}

sources = {
  S3 {
    type = "S3"
    bucketName = "d11-contest-orders-load"
    shardMasterFilePath = "orders_shard_manager/shardmaster.json"
    entityShardMappingFolderPath = "orders_shard_manager/entity_shard_mapping/"
    region = "us-east-1"
    accessKey = "accessKey"
    secretKey = "secretKey"
    endpointOverride = "http://localhost:4566"
    forcePathStyle = true
    databaseDefaultShardConfigMap = {
      POSTGRES {
        database = "postgres"
        username = "postgres"
        password = "postgres"
        maxConnections = 5
        circuitBreaker {
          enabled = true
          failureRateThreshold = 100
          waitDurationInOpenState = 10000
          slidingWindowSize = 10
          slidingWindowType = "COUNT_BASED"
          permittedNumberOfCallsInHalfOpenState = 10
          minimumNumberOfCalls = 100
          slowCallRateThreshold = 100
          slowCallDurationThreshold = 10000
        }
      },
      MYSQL {
        database = "mysql"
        username = "mysql"
        password = "mysql"
        maxConnections = 5
        circuitBreaker {
          enabled = true
          failureRateThreshold = 100
          waitDurationInOpenState = 10000
          slidingWindowSize = 10
          slidingWindowType = "COUNT_BASED"
          permittedNumberOfCallsInHalfOpenState = 10
          minimumNumberOfCalls = 100
          slowCallRateThreshold = 100
          slowCallDurationThreshold = 10000
        }
      }
      DYNAMO {
        database = "postgres"
        username = "postgres"
        password = "postgres"
        maxConnections = 5,
        accessKey = "accessKey"
        secretKey = "secretKey",
        tableConnectionMap = {
          Orders = {
            endpoint = "http://localhost:8000"
            region = "us-east-1"
          }
        }
      }
    }
  }
  POSTGRES {
    type = "POSTGRES"
    writerHost = "localhost"
    readerHost = "localhost"
    port = 5400
    database = "postgres"
    username = "postgres"
    password = "postgres"
    databaseDefaultShardConfigMap = {
      POSTGRES {
        database = "postgres"
        username = "postgres"
        password = "postgres"
        maxConnections = 5
        circuitBreaker {
          enabled = true
          failureRateThreshold = 100
          waitDurationInOpenState = 10000
          slidingWindowSize = 10
          slidingWindowType = "COUNT_BASED"
          permittedNumberOfCallsInHalfOpenState = 10
          minimumNumberOfCalls = 100
          slowCallRateThreshold = 100
          slowCallDurationThreshold = 10000
        }
      },
      MYSQL {
        database = "mysql"
        username = "mysql"
        password = "mysql"
        maxConnections = 5
        circuitBreaker {
          enabled = true
          failureRateThreshold = 100
          waitDurationInOpenState = 10000
          slidingWindowSize = 10
          slidingWindowType = "COUNT_BASED"
          permittedNumberOfCallsInHalfOpenState = 10
          minimumNumberOfCalls = 100
          slowCallRateThreshold = 100
          slowCallDurationThreshold = 10000
        }
      }
      DYNAMO {
        database = "postgres"
        username = "postgres"
        password = "postgres",
        maxConnections = 5,
        accessKey = "accessKey"
        secretKey = "secretKey",
        tableConnectionMap = {
          Orders = {
            endpoint = "http://localhost:8000"
            region = "us-east-1"
          }
        }
      }
    }
  }
  MYSQL {
    type = "MYSQL"
    writerHost = "localhost"
    readerHost = "localhost"
    port = 5402
    database = "mysql"
    username = "mysql"
    password = "mysql"
    databaseDefaultShardConfigMap = {
      MYSQL {
        writerHost = "localhost"
        readerHost = "localhost"
        database = "mysql"
        username = "mysql"
        password = "mysql"
        circuitBreaker {
          enabled = true
          failureRateThreshold = 100
          waitDurationInOpenState = 10000
          slidingWindowSize = 10
          slidingWindowType = "COUNT_BASED"
          permittedNumberOfCallsInHalfOpenState = 10
          minimumNumberOfCalls = 100
          slowCallRateThreshold = 100
          slowCallDurationThreshold = 10000
        }
      },
      DYNAMO {
          database = "postgres"
          username = "postgres"
          password = "postgres"
          maxConnections = 5,
          accessKey = "accessKey"
          secretKey = "secretKey",
          tableConnectionMap = {
            Orders = {
              endpoint = "http://localhost:9111"
              region = "us-east-1"
            }
          }
          circuitBreaker {
            enabled = true
            failureRateThreshold = 100
            waitDurationInOpenState = 10000
            slidingWindowSize = 10
            slidingWindowType = "COUNT_BASED"
            permittedNumberOfCallsInHalfOpenState = 10
            minimumNumberOfCalls = 100
            slowCallRateThreshold = 100
            slowCallDurationThreshold = 10000
        }
      },
      POSTGRES {
        database = "postgres"
        username = "postgres"
        password = "postgres"
        maxConnections = 5
        circuitBreaker {
          enabled = true
          failureRateThreshold = 100
          waitDurationInOpenState = 10000
          slidingWindowSize = 10
          slidingWindowType = "COUNT_BASED"
          permittedNumberOfCallsInHalfOpenState = 10
          minimumNumberOfCalls = 100
          slowCallRateThreshold = 100
          slowCallDurationThreshold = 10000
        }
      }
    }
  }
  DYNAMO {
    type = "DYNAMO"
    region = "us-east-1"
    accessKey = "accessKey"
    secretKey = "secretKey"
    endpointOverride = "http://localhost:8999"
    databaseDefaultShardConfigMap = {
      POSTGRES {
        database = "postgres"
        username = "postgres"
        password = "postgres"
        maxConnections = 5
        circuitBreaker {
          enabled = true
          failureRateThreshold = 100
          waitDurationInOpenState = 10000
          slidingWindowSize = 10
          slidingWindowType = "COUNT_BASED"
          permittedNumberOfCallsInHalfOpenState = 10
          minimumNumberOfCalls = 100
          slowCallRateThreshold = 100
          slowCallDurationThreshold = 10000
        }
      },
      MYSQL {
        database = "postgres"
        username = "postgres"
        password = "postgres"
        maxConnections = 5
        circuitBreaker {
          enabled = true
          failureRateThreshold = 100
          waitDurationInOpenState = 10000
          slidingWindowSize = 10
          slidingWindowType = "COUNT_BASED"
          permittedNumberOfCallsInHalfOpenState = 10
          minimumNumberOfCalls = 100
          slowCallRateThreshold = 100
          slowCallDurationThreshold = 10000
        }
      },
      DYNAMO {
        database = "postgres"
        username = "postgres"
        password = "postgres"
        maxConnections = 5,
        accessKey = "accessKey"
        secretKey = "secretKey",
        tableConnectionMap = {
          Orders = {
            endpoint = "http://localhost:9111"
            region = "us-east-1"
          }
        }
        circuitBreaker {
          enabled = true
          failureRateThreshold = 100
          waitDurationInOpenState = 10000
          slidingWindowSize = 10
          slidingWindowType = "COUNT_BASED"
          permittedNumberOfCallsInHalfOpenState = 10
          minimumNumberOfCalls = 100
          slowCallRateThreshold = 100
          slowCallDurationThreshold = 10000
        }
      }
    }
  }
}
