<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.dream11</groupId>
  <artifactId>shard-wizard</artifactId>
  <version>1.0.4-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>Shard Wizard</name>
  <description>Vert.x library for scalable shard management and routing of entities across multiple
    shards
  </description>
  <url>https://github.com/dream-sports-labs/shard-wizard</url>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://opensource.org/licenses/MIT</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <url>https://github.com/dream-sports-labs/shard-wizard</url>
    <connection>scm:git:git://github.com/dream-sports-labs/shard-wizard.git</connection>
    <developerConnection>scm:git:ssh://github.com/dream-sports-labs/shard-wizard.git
    </developerConnection>
  </scm>

  <developers>
    <developer>
      <name>SHRUTI PATOLIA</name>
      <email>shruti.patolia@dream11.com</email>
      <organization>Dream11</organization>
      <organizationUrl>https://www.dream11.com/</organizationUrl>
    </developer>
  </developers>

  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <vertx.version>3.9.2</vertx.version>
    <mockito.version>3.4.0</mockito.version>
    <config.version>1.3.2</config.version>
    <commons-lang3.version>3.9</commons-lang3.version>
    <git-code-format-maven-plugin.version>5.1</git-code-format-maven-plugin.version>
    <vertx.completable.future.version>0.1.2</vertx.completable.future.version>
    <lombok.version>1.18.24</lombok.version>
    <resilience4j.version>1.7.1</resilience4j.version>
    <vertx.pg.client.version>3.9.2</vertx.pg.client.version>
    <logback.version>1.5.7</logback.version>
    <postgresql.version>42.7.3</postgresql.version>
    <slf4j-api.version>2.0.16</slf4j-api.version>
    <logback-classic.version>1.5.7</logback-classic.version>
    <vertx-junit5.version>4.5.1</vertx-junit5.version>
    <client.version>2.1</client.version>
    <postgresql.version.testcontainers>1.18.3</postgresql.version.testcontainers>
    <localstack.version>1.21.0</localstack.version>
    <s3.version>2.31.14</s3.version>
    <netty-nio-client.version>2.31.14</netty-nio-client.version>
    <HikariCP.version>5.1.0</HikariCP.version>
    <rxjava.version>2.2.12</rxjava.version>
    <guice.version>7.0.0</guice.version>
    <vertx-config.version>4.5.1</vertx-config.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <luaj-jse.version>3.0.1</luaj-jse.version>
    <maven.nexus.plugin.version>1.7.0</maven.nexus.plugin.version>
    <maven.gpg.plugin.version>3.2.7</maven.gpg.plugin.version>
    <maven.source.plugin.version>3.2.1</maven.source.plugin.version>
    <maven.javadoc.plugin.version>3.5.0</maven.javadoc.plugin.version>
    <maven.gpg.plugin.version>3.1.0</maven.gpg.plugin.version>
    <maven.dependency.plugin.version>3.1.2</maven.dependency.plugin.version>
    <maven.surefire.plugin.version>3.2.5</maven.surefire.plugin.version>
    <junit.jupiter.version>5.8.2</junit.jupiter.version>
    <central.publishing.plugin.version>0.8.0</central.publishing.plugin.version>
    <jacoco.plugin.version>0.8.12</jacoco.plugin.version>
    <commons.csv.version>1.10.0</commons.csv.version>
    <aws.crt.client.version>2.31.14</aws.crt.client.version>
    <mysql.connector.version>8.0.33</mysql.connector.version>
    <dynamodb.version>2.31.14</dynamodb.version>
    <dogstatsd.client.version>4.2.0</dogstatsd.client.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <version>${vertx.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-api.version}</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-classic.version}</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>${commons.csv.version}</version>
    </dependency>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-pg-client</artifactId>
      <version>${vertx.pg.client.version}</version>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-junit5</artifactId>
      <version>${vertx-junit5.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.ongres.scram</groupId>
      <artifactId>client</artifactId>
      <version>${client.version}</version>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version.testcontainers}</version>
    </dependency>

    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>aws-crt-client</artifactId>
      <version>${aws.crt.client.version}</version>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mysql</artifactId>
      <version>1.18.3</version> <!-- or latest -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.connector.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>dynamodb</artifactId>
      <version>${dynamodb.version}</version>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>localstack</artifactId>
      <version>${localstack.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version> <!-- Or latest -->
    </dependency>


    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>s3</artifactId>
      <version>${s3.version}</version>
    </dependency>

    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>netty-nio-client</artifactId>
      <version>${netty-nio-client.version}</version>
    </dependency>

    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>${config.version}</version>
    </dependency>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-rx-java2</artifactId>
      <version>${vertx.version}</version>
    </dependency>


    <dependency>
      <groupId>io.github.resilience4j</groupId>
      <artifactId>resilience4j-circuitbreaker</artifactId>
      <version>${resilience4j.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.resilience4j</groupId>
      <artifactId>resilience4j-core</artifactId>
      <version>${resilience4j.version}</version>
    </dependency>

    <dependency>
      <groupId>com.datadoghq</groupId>
      <artifactId>java-dogstatsd-client</artifactId>
      <version>${dogstatsd.client.version}</version>
    </dependency>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-mysql-client</artifactId>
      <version>${vertx.version}</version>
    </dependency>

    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${HikariCP.version}</version> <!-- or the latest version -->
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback.version}</version>
    </dependency>

    <dependency>
      <groupId>io.reactivex.rxjava2</groupId>
      <artifactId>rxjava</artifactId>
      <version>${rxjava.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>me.escoffier.vertx</groupId>
      <artifactId>vertx-completable-future</artifactId>
      <version>${vertx.completable.future.version}</version>
    </dependency>

    <dependency>
      <groupId>org.luaj</groupId>
      <artifactId>luaj-jse</artifactId>
      <version>${luaj-jse.version}</version> <!-- or latest -->
    </dependency>

    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>${guice.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-config</artifactId>
      <version>${vertx-config.version}</version> <!-- or the version matching your Vert.x core -->
    </dependency>

  </dependencies>


  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Javadoc JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
        <configuration>
          <failOnError>false</failOnError>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- GPG Signing -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>${maven.gpg.plugin.version}</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.cosium.code</groupId>
        <artifactId>git-code-format-maven-plugin</artifactId>
        <version>${git-code-format-maven-plugin.version}</version>
        <executions>
          <!-- On commit, format the modified files -->
          <execution>
            <id>install-formatter-hook</id>
            <goals>
              <goal>install-hooks</goal>
            </goals>
          </execution>
          <!-- On Maven verify phase, fail if any file
          (including unmodified) is badly formatted -->
          <execution>
            <id>validate-code-format</id>
            <goals>
              <goal>validate-code-format</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <!-- Enable https://github.com/google/google-java-format -->
          <dependency>
            <groupId>com.cosium.code</groupId>
            <artifactId>google-java-format</artifactId>
            <version>${git-code-format-maven-plugin.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <formatterOptions>
            <!-- Use AOSP style instead of Google Style (4-space indentation). -->
            <googleJavaFormat.aosp>false</googleJavaFormat.aosp>
            <!-- Format the javadoc -->
            <googleJavaFormat.formatJavadoc>true</googleJavaFormat.formatJavadoc>
            <!-- Fix import order and remove any unused imports, but do no other formatting. -->
            <googleJavaFormat.fixImportsOnly>false</googleJavaFormat.fixImportsOnly>
            <!-- Do not fix the import order. Unused imports will still be removed. -->
            <googleJavaFormat.skipSortingImports>false</googleJavaFormat.skipSortingImports>
            <!-- Remove unused imports. Imports will still be sorted. -->
            <googleJavaFormat.skipRemovingUnusedImports>false
            </googleJavaFormat.skipRemovingUnusedImports>
          </formatterOptions>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>

          <execution>
            <id>report</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven.dependency.plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <annotationProcessors>
            <annotationProcessor>lombok.launch.AnnotationProcessorHider$AnnotationProcessor
            </annotationProcessor>
          </annotationProcessors>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <includes>
            <include>**/*Test.java</include>
          </includes>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.sonatype.central</groupId>
        <artifactId>central-publishing-maven-plugin</artifactId>
        <version>${central.publishing.plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <publishingServerId>central</publishingServerId>
          <autoPublish>false
          </autoPublish> <!-- TODO: Change to true for auto publishing to maven central -->
        </configuration>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven.gpg.plugin.version}</version>
            <configuration>
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <distributionManagement>
    <snapshotRepository>
      <id>central</id>
      <url>https://central.sonatype.com/repository/maven-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

  <repositories>
    <repository>
      <name>Central Portal Snapshots</name>
      <id>central-portal-snapshots</id>
      <url>https://central.sonatype.com/repository/maven-snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

</project>